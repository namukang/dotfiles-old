set nocompatible

"
" Vim plugins
"

" This needs to be off for Vundle, turned back on after
filetype off

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle - required!
Bundle 'gmarik/vundle'

" Bundle 'altercation/vim-colors-solarized'
" Bundle 'cakebaker/scss-syntax.vim'
" Bundle 'ervandew/screen'
" Bundle 'ervandew/supertab'
" Bundle 'fholgado/minibufexpl.vim'
Bundle 'kchmck/vim-coffee-script'
Bundle 'kien/ctrlp.vim'
Bundle 'Lokaltog/vim-powerline'
Bundle 'nviennot/molokai'
Bundle 'scrooloose/nerdcommenter'
Bundle 'scrooloose/nerdtree'
Bundle 'scrooloose/syntastic'
Bundle 'Shougo/neocomplcache.vim'
" Bundle 'tomtom/quickfixsigns_vim'
" Bundle 'tpope/vim-endwise'
" Bundle 'tpope/vim-fugitive'
" Bundle 'tpope/vim-rails'
Bundle 'tpope/vim-surround'
Bundle 'Townk/vim-autoclose'
" Bundle 'vim-ruby/vim-ruby'

filetype indent plugin on

let mapleader=','

"
" Command mode
"

" <TAB> in command mode will show possible completions above command line
set wildmenu

" list matches, then longest common part, then all
set wildmode=list:longest,full

"
" Autocompletion
"

let g:neocomplcache_enable_at_startup = 1

" <TAB> completion.
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"

"
" Colors
"

syntax on

colorscheme molokai

"
" Search
"

" ignore case
set ignorecase

" match case if a capital letter is present in the regexp
set smartcase

" highlight matched patterns
set hlsearch

" cancel search highlighting
map <Leader>/ :nohlsearch<cr>

" highlight search result as you type it
set incsearch

"
" Indentation
"

" copy indentation from previous line
set autoindent

" insert level of indentation in some cases
set smartindent

" pressing <TAB> key inserts 'softtabstop' amount of space characters
set expandtab

" width of pressing >>, <<, or ==
set shiftwidth=2

" width of pressing <TAB> or <BS> keys
set softtabstop=2

"
" NERDTree
"

nmap <C-g> :NERDTreeToggle<CR>
let NERDTreeIgnore=[ '\.pyc$', '\.pyo$', '\.py\$class$', '\.obj$', '\.o$', '\.so$', '\.egg$', '^\.git$' ]

" open NERDTree automatically when vim starts up with no files specified
autocmd vimenter * if !argc() | NERDTree | endif

" close vim if only window left open is NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

"
" Files
"

" allow switching from unsaved buffer
set hidden

" highlight current line
set cursorline

" sets the swap (.swp) file directory
set directory=/tmp

" show line numbers
set number

" always show status line
set laststatus=2

" show whitespace and trailing spaces
set list!
set listchars=tab:▸\ ,trail:•,extends:»,precedes:«

set backspace=indent,eol,start

" JSON
au BufRead,BufNewFile *.json set ft=json syntax=javascript

"
" Custom shortcuts
"

" map jk to ESC
inoremap jk <esc>

" map ; to :
nmap ; :

" navigate using displayed lines instead of physical lines
nnoremap j gj
nnoremap k gk

" window navigation
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" helpers to edit files
" http://vimcasts.org/e/14
cnoremap %% <C-R>=fnameescape(expand('%:h')).'/'<cr>
map <leader>ew :e %%
map <leader>es :sp %%
map <leader>ev :vsp %%
map <leader>et :tabe %%

" allow mouse scrolling
set mouse=a
